# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from .load_reply import request_pb2 as agents__service_dot_load__reply_dot_request__pb2
from .load_reply import response_pb2 as agents__service_dot_load__reply_dot_response__pb2
from .process_batch_warnings import request_pb2 as agents__service_dot_process__batch__warnings_dot_request__pb2
from .process_batch_warnings import response_pb2 as agents__service_dot_process__batch__warnings_dot_response__pb2
from .process_new_email import request_pb2 as agents__service_dot_process__new__email_dot_request__pb2
from .process_new_email import response_pb2 as agents__service_dot_process__new__email_dot_response__pb2
from .process_ratecon import request_pb2 as agents__service_dot_process__ratecon_dot_request__pb2
from .process_ratecon import response_pb2 as agents__service_dot_process__ratecon_dot_response__pb2
from .stream_negotiation import request_pb2 as agents__service_dot_stream__negotiation_dot_request__pb2
from .stream_negotiation import response_pb2 as agents__service_dot_stream__negotiation_dot_response__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in agents_service/index_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class EmailProcessingServiceStub(object):
    """Service definition for Email Processing
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ProcessLoadReply = channel.unary_stream(
                '/agents_service.EmailProcessingService/ProcessLoadReply',
                request_serializer=agents__service_dot_load__reply_dot_request__pb2.LoadReplyProcessorRequest.SerializeToString,
                response_deserializer=agents__service_dot_load__reply_dot_response__pb2.LoadReplyProcessorResponse.FromString,
                _registered_method=True)
        self.ProcessNewEmail = channel.unary_unary(
                '/agents_service.EmailProcessingService/ProcessNewEmail',
                request_serializer=agents__service_dot_process__new__email_dot_request__pb2.NewEmailRequest.SerializeToString,
                response_deserializer=agents__service_dot_process__new__email_dot_response__pb2.EmailProcessingResponse.FromString,
                _registered_method=True)
        self.ProcessBatchWarnings = channel.unary_unary(
                '/agents_service.EmailProcessingService/ProcessBatchWarnings',
                request_serializer=agents__service_dot_process__batch__warnings_dot_request__pb2.BatchWarningsRequest.SerializeToString,
                response_deserializer=agents__service_dot_process__batch__warnings_dot_response__pb2.BatchWarningsResponse.FromString,
                _registered_method=True)
        self.StreamNegotiation = channel.unary_stream(
                '/agents_service.EmailProcessingService/StreamNegotiation',
                request_serializer=agents__service_dot_stream__negotiation_dot_request__pb2.NegotiationRequest.SerializeToString,
                response_deserializer=agents__service_dot_stream__negotiation_dot_response__pb2.NegotiationResponse.FromString,
                _registered_method=True)
        self.ProcessRatecon = channel.unary_unary(
                '/agents_service.EmailProcessingService/ProcessRatecon',
                request_serializer=agents__service_dot_process__ratecon_dot_request__pb2.ProcessRateconRequest.SerializeToString,
                response_deserializer=agents__service_dot_process__ratecon_dot_response__pb2.ProcessRateconResponse.FromString,
                _registered_method=True)


class EmailProcessingServiceServicer(object):
    """Service definition for Email Processing
    """

    def ProcessLoadReply(self, request, context):
        """Process a reply to a load email with streaming response
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessNewEmail(self, request, context):
        """Process a new email
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessBatchWarnings(self, request, context):
        """Process batch warnings for multiple loads
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamNegotiation(self, request, context):
        """Negotiator Service Method
        Single unified method for negotiation - handles all negotiation actions via a streaming response
        This makes the agent service stateless, with all state managed by the main service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessRatecon(self, request, context):
        """Process a rate confirmation document from a GCS URL
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EmailProcessingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ProcessLoadReply': grpc.unary_stream_rpc_method_handler(
                    servicer.ProcessLoadReply,
                    request_deserializer=agents__service_dot_load__reply_dot_request__pb2.LoadReplyProcessorRequest.FromString,
                    response_serializer=agents__service_dot_load__reply_dot_response__pb2.LoadReplyProcessorResponse.SerializeToString,
            ),
            'ProcessNewEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessNewEmail,
                    request_deserializer=agents__service_dot_process__new__email_dot_request__pb2.NewEmailRequest.FromString,
                    response_serializer=agents__service_dot_process__new__email_dot_response__pb2.EmailProcessingResponse.SerializeToString,
            ),
            'ProcessBatchWarnings': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessBatchWarnings,
                    request_deserializer=agents__service_dot_process__batch__warnings_dot_request__pb2.BatchWarningsRequest.FromString,
                    response_serializer=agents__service_dot_process__batch__warnings_dot_response__pb2.BatchWarningsResponse.SerializeToString,
            ),
            'StreamNegotiation': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamNegotiation,
                    request_deserializer=agents__service_dot_stream__negotiation_dot_request__pb2.NegotiationRequest.FromString,
                    response_serializer=agents__service_dot_stream__negotiation_dot_response__pb2.NegotiationResponse.SerializeToString,
            ),
            'ProcessRatecon': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessRatecon,
                    request_deserializer=agents__service_dot_process__ratecon_dot_request__pb2.ProcessRateconRequest.FromString,
                    response_serializer=agents__service_dot_process__ratecon_dot_response__pb2.ProcessRateconResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'agents_service.EmailProcessingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('agents_service.EmailProcessingService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class EmailProcessingService(object):
    """Service definition for Email Processing
    """

    @staticmethod
    def ProcessLoadReply(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/agents_service.EmailProcessingService/ProcessLoadReply',
            agents__service_dot_load__reply_dot_request__pb2.LoadReplyProcessorRequest.SerializeToString,
            agents__service_dot_load__reply_dot_response__pb2.LoadReplyProcessorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProcessNewEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agents_service.EmailProcessingService/ProcessNewEmail',
            agents__service_dot_process__new__email_dot_request__pb2.NewEmailRequest.SerializeToString,
            agents__service_dot_process__new__email_dot_response__pb2.EmailProcessingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProcessBatchWarnings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agents_service.EmailProcessingService/ProcessBatchWarnings',
            agents__service_dot_process__batch__warnings_dot_request__pb2.BatchWarningsRequest.SerializeToString,
            agents__service_dot_process__batch__warnings_dot_response__pb2.BatchWarningsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamNegotiation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/agents_service.EmailProcessingService/StreamNegotiation',
            agents__service_dot_stream__negotiation_dot_request__pb2.NegotiationRequest.SerializeToString,
            agents__service_dot_stream__negotiation_dot_response__pb2.NegotiationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProcessRatecon(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agents_service.EmailProcessingService/ProcessRatecon',
            agents__service_dot_process__ratecon_dot_request__pb2.ProcessRateconRequest.SerializeToString,
            agents__service_dot_process__ratecon_dot_response__pb2.ProcessRateconResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
